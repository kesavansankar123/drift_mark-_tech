{"ast":null,"code":"import React,{useState}from\"react\";import{Navbar,Nav,Container,Button,Offcanvas,Image,Dropdown}from\"react-bootstrap\";import{Link,useLocation}from\"react-router-dom\";import\"bootstrap/dist/css/bootstrap.min.css\";import\"../components/NavigationBar.css\";import OfficialLogo2 from\"../assets/OfficialLogo2.jpeg\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function NavigationBar(){const[show,setShow]=useState(false);const{pathname}=useLocation();const handleClose=()=>setShow(false);const handleShow=()=>setShow(true);const isServicesActive=pathname.startsWith(\"/services\");return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{expand:\"lg\",className:\"navigation-bar border-bottom fixed-top\",children:/*#__PURE__*/_jsxs(Container,{className:\"my-3\",children:[/*#__PURE__*/_jsxs(Navbar.Brand,{as:Link,to:\"/\",className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(Image,{src:OfficialLogo2,style:{width:\"40px\",height:\"30px\"},className:\"me-2\",alt:\"Driftmark Logo\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-teal fw-bold m-0\",style:{color:\"#0085BD\"},children:\"Driftmark Technology\"})]}),/*#__PURE__*/_jsx(Navbar.Collapse,{className:\"justify-content-end d-none d-lg-flex\",children:/*#__PURE__*/_jsxs(Nav,{className:\"nav-links\",children:[[{to:\"/\",label:\"Home\"},{to:\"/innovation\",label:\"Innovation\"},{to:\"/enterprise\",label:\"Enterprise\"},{to:\"/about\",label:\"About Us\"},{to:\"/contact\",label:\"Contact\"}].map(_ref=>{let{to,label}=_ref;return/*#__PURE__*/_jsx(Nav.Link,{as:Link,to:to,className:\"nav-item \".concat(pathname===to?\"active-link\":\"\"),children:label},to);}),/*#__PURE__*/_jsxs(Dropdown,{children:[/*#__PURE__*/_jsx(Dropdown.Toggle,{id:\"dropdown-services\",className:\"nav-item \".concat(isServicesActive?\"active-link\":\"\"),variant:\"link\",style:{textDecoration:\"none\"},children:\"Services\"}),/*#__PURE__*/_jsxs(Dropdown.Menu,{children:[/*#__PURE__*/_jsx(Dropdown.Item,{as:Link,to:\"/services/blog\",children:\"Blog\"}),/*#__PURE__*/_jsx(Dropdown.Item,{as:Link,to:\"/services/downloads\",children:\"Downloads\"})]})]})]})})]})}),/*#__PURE__*/_jsxs(Offcanvas,{show:show,onHide:handleClose,placement:\"end\",children:[/*#__PURE__*/_jsx(Offcanvas.Header,{closeButton:true}),/*#__PURE__*/_jsx(Offcanvas.Body,{children:/*#__PURE__*/_jsxs(Nav,{className:\"flex-column\",children:[[{to:\"/\",label:\"Home\"},{to:\"/innovation\",label:\"Innovation\"},{to:\"/enterprise\",label:\"Enterprise\"},{to:\"/about\",label:\"About Us\"},{to:\"/contact\",label:\"Contact\"}].map(_ref2=>{let{to,label}=_ref2;return/*#__PURE__*/_jsx(Nav.Link,{as:Link,to:to,onClick:handleClose,className:\"nav-item \".concat(pathname===to?\"active-link\":\"\"),children:label},to);}),/*#__PURE__*/_jsxs(Dropdown,{children:[/*#__PURE__*/_jsx(Dropdown.Toggle,{id:\"dropdown-services-mobile\",className:\"nav-item \".concat(isServicesActive?\"active-link\":\"\"),variant:\"link\",style:{textDecoration:\"none\"},children:\"Services\"}),/*#__PURE__*/_jsxs(Dropdown.Menu,{children:[/*#__PURE__*/_jsx(Dropdown.Item,{as:Link,to:\"/services/blog\",onClick:handleClose,children:\"Blog\"}),/*#__PURE__*/_jsx(Dropdown.Item,{as:Link,to:\"/services/downloads\",onClick:handleClose,children:\"Downloads\"})]})]})]})})]})]});}export default NavigationBar;// import React, { useState } from \"react\";\n// import {\n//   Navbar,\n//   Nav,\n//   Container,\n//   Button,\n//   Offcanvas,\n//   Image,\n//   Dropdown,\n// } from \"react-bootstrap\";\n// import { Link, useLocation } from \"react-router-dom\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"../components/NavigationBar.css\";\n// import OfficialLogo2 from \"../assets/OfficialLogo2.jpeg\";\n// function NavigationBar() {\n//   const [show, setShow] = useState(false);\n//   const { pathname } = useLocation();\n//   const handleClose = () => setShow(false);\n//   const handleShow = () => setShow(true);\n//   // Check if the current path matches `/services` or its child routes\n//   const isServicesActive = pathname.startsWith(\"/services\");\n//   return (\n//     <>\n//       <Navbar expand=\"lg\" className=\"navigation-bar border-bottom\">\n//         <Container className=\"my-3\">\n//           <Navbar.Brand as={Link} to=\"/\" className=\"d-flex align-items-center\">\n//             <Image\n//               src={OfficialLogo2}\n//               style={{ width: \"40px\", height: \"30px\" }}\n//               className=\"me-2\"\n//               alt=\"Driftmark Logo\"\n//             />\n//             <span className=\"text-teal fw-bold m-0\" style={{ color: \"#0085BD\" }}>\n//               Driftmark Technology\n//             </span>\n//           </Navbar.Brand>\n//           <Button\n//             variant=\"outline-primary\"\n//             className=\"d-lg-none\"\n//             onClick={handleShow}\n//           >\n//             <span className=\"navbar-toggler-icon\"></span>\n//           </Button>\n//           <Navbar.Collapse className=\"justify-content-end d-none d-lg-flex\">\n//             <Nav className=\"nav-links\">\n//               {[{ to: \"/\", label: \"Home\" }, { to: \"/innovation\", label: \"Innovation\" }, { to: \"/enterprise\", label: \"Enterprise\" }, { to: \"/about\", label: \"About Us\" }, { to: \"/contact\", label: \"Contact\" }]\n//                 .map(({ to, label }) => (\n//                   <Nav.Link\n//                     key={to}\n//                     as={Link}\n//                     to={to}\n//                     className={`nav-item ${\n//                       pathname === to ? \"active-link\" : \"\"\n//                     }`}\n//                   >\n//                     {label}\n//                   </Nav.Link>\n//                 ))}\n//               <Dropdown>\n//                 <Dropdown.Toggle\n//                   id=\"dropdown-services\"\n//                   className={`nav-item ${isServicesActive ? \"active-link\" : \"\"}`}\n//                   variant=\"link\"\n//                   style={{ textDecoration: \"none\" }}\n//                 >\n//                   Services\n//                 </Dropdown.Toggle>\n//                 <Dropdown.Menu>\n//                   <Dropdown.Item as={Link} to=\"/services/blog\">\n//                     Blog\n//                   </Dropdown.Item>\n//                   <Dropdown.Item as={Link} to=\"/services/downloads\">\n//                     Downloads\n//                   </Dropdown.Item>\n//                 </Dropdown.Menu>\n//               </Dropdown>\n//             </Nav>\n//           </Navbar.Collapse>\n//         </Container>\n//       </Navbar>\n//       <Offcanvas show={show} onHide={handleClose} placement=\"end\">\n//         <Offcanvas.Header closeButton></Offcanvas.Header>\n//         <Offcanvas.Body>\n//           <Nav className=\"flex-column\">\n//             {[{ to: \"/\", label: \"Home\" }, { to: \"/innovation\", label: \"Innovation\" }, { to: \"/enterprise\", label: \"Enterprise\" }, { to: \"/about\", label: \"About Us\" }, { to: \"/contact\", label: \"Contact\" }]\n//               .map(({ to, label }) => (\n//                 <Nav.Link\n//                   key={to}\n//                   as={Link}\n//                   to={to}\n//                   onClick={handleClose}\n//                   className={`nav-item ${\n//                     pathname === to ? \"active-link\" : \"\"\n//                   }`}\n//                 >\n//                   {label}\n//                 </Nav.Link>\n//               ))}\n//             <Dropdown>\n//               <Dropdown.Toggle\n//                 id=\"dropdown-services-mobile\"\n//                 className={`nav-item ${isServicesActive ? \"active-link\" : \"\"}`}\n//                 variant=\"link\"\n//                 style={{ textDecoration: \"none\" }}\n//               >\n//                 Services\n//               </Dropdown.Toggle>\n//               <Dropdown.Menu>\n//                 <Dropdown.Item as={Link} to=\"/services/blog\" onClick={handleClose}>\n//                   Blog\n//                 </Dropdown.Item>\n//                 <Dropdown.Item as={Link} to=\"/services/downloads\" onClick={handleClose}>\n//                   Downloads\n//                 </Dropdown.Item>\n//               </Dropdown.Menu>\n//             </Dropdown>\n//           </Nav>\n//         </Offcanvas.Body>\n//       </Offcanvas>\n//     </>\n//   );\n// }\n// export default NavigationBar;","map":{"version":3,"names":["React","useState","Navbar","Nav","Container","Button","Offcanvas","Image","Dropdown","Link","useLocation","OfficialLogo2","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","NavigationBar","show","setShow","pathname","handleClose","handleShow","isServicesActive","startsWith","children","expand","className","Brand","as","to","src","style","width","height","alt","color","Collapse","label","map","_ref","concat","Toggle","id","variant","textDecoration","Menu","Item","onHide","placement","Header","closeButton","Body","_ref2","onClick"],"sources":["H:/drift mark tecknology internship day 1/company website drift mark task 5/my task/my-app/src/components/NavigationBar.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Navbar,\n  Nav,\n  Container,\n  Button,\n  Offcanvas,\n  Image,\n  Dropdown,\n} from \"react-bootstrap\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../components/NavigationBar.css\";\nimport OfficialLogo2 from \"../assets/OfficialLogo2.jpeg\";\n\nfunction NavigationBar() {\n  const [show, setShow] = useState(false);\n  const { pathname } = useLocation();\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const isServicesActive = pathname.startsWith(\"/services\");\n\n  return (\n    <>\n      <Navbar expand=\"lg\" className=\"navigation-bar border-bottom fixed-top\">\n        <Container className=\"my-3\">\n          <Navbar.Brand as={Link} to=\"/\" className=\"d-flex align-items-center\">\n            <Image\n              src={OfficialLogo2}\n              style={{ width: \"40px\", height: \"30px\" }}\n              className=\"me-2\"\n              alt=\"Driftmark Logo\"\n            />\n            <span className=\"text-teal fw-bold m-0\" style={{ color: \"#0085BD\" }}>\n              Driftmark Technology\n            </span>\n          </Navbar.Brand>\n          {/* <Button\n            variant=\"outline-primary\"\n            className=\"d-lg-none\"\n            onClick={handleShow}\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </Button> */}\n          <Navbar.Collapse className=\"justify-content-end d-none d-lg-flex\">\n            <Nav className=\"nav-links\">\n              {[{ to: \"/\", label: \"Home\" }, { to: \"/innovation\", label: \"Innovation\" }, { to: \"/enterprise\", label: \"Enterprise\" }, { to: \"/about\", label: \"About Us\" }, { to: \"/contact\", label: \"Contact\" }].map(({ to, label }) => (\n            <Nav.Link\n                  key={to}\n                  as={Link}\n                  to={to}\n                  className={`nav-item ${pathname === to ? \"active-link\" : \"\"}`}\n                >\n                  {label}\n                </Nav.Link>\n              ))}\n              <Dropdown>\n                <Dropdown.Toggle\n                  id=\"dropdown-services\"\n                  className={`nav-item ${isServicesActive ? \"active-link\" : \"\"}`}\n                  variant=\"link\"\n                  style={{ textDecoration: \"none\" }}\n                >\n                  Services\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  <Dropdown.Item as={Link} to=\"/services/blog\">\n                    Blog\n                  </Dropdown.Item>\n                  <Dropdown.Item as={Link} to=\"/services/downloads\">\n                    Downloads\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <Offcanvas show={show} onHide={handleClose} placement=\"end\">\n        <Offcanvas.Header closeButton></Offcanvas.Header>\n        <Offcanvas.Body>\n          <Nav className=\"flex-column\">\n            {[{ to: \"/\", label: \"Home\" }, { to: \"/innovation\", label: \"Innovation\" }, { to: \"/enterprise\", label: \"Enterprise\" }, { to: \"/about\", label: \"About Us\" }, { to: \"/contact\", label: \"Contact\" }].map(({ to, label }) => (\n              <Nav.Link\n                key={to}\n                as={Link}\n                to={to}\n                onClick={handleClose}\n                className={`nav-item ${pathname === to ? \"active-link\" : \"\"}`}\n              >\n                {label}\n              </Nav.Link>\n            ))}\n            <Dropdown>\n              <Dropdown.Toggle\n                id=\"dropdown-services-mobile\"\n                className={`nav-item ${isServicesActive ? \"active-link\" : \"\"}`}\n                variant=\"link\"\n                style={{ textDecoration: \"none\" }}\n              >\n                Services\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Item as={Link} to=\"/services/blog\" onClick={handleClose}>\n                  Blog\n                </Dropdown.Item>\n                <Dropdown.Item as={Link} to=\"/services/downloads\" onClick={handleClose}>\n                  Downloads\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Nav>\n        </Offcanvas.Body>\n      </Offcanvas>\n    </>\n  );\n}\n\nexport default NavigationBar;\n\n\n// import React, { useState } from \"react\";\n// import {\n//   Navbar,\n//   Nav,\n//   Container,\n//   Button,\n//   Offcanvas,\n//   Image,\n//   Dropdown,\n// } from \"react-bootstrap\";\n// import { Link, useLocation } from \"react-router-dom\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"../components/NavigationBar.css\";\n// import OfficialLogo2 from \"../assets/OfficialLogo2.jpeg\";\n\n// function NavigationBar() {\n//   const [show, setShow] = useState(false);\n//   const { pathname } = useLocation();\n\n//   const handleClose = () => setShow(false);\n//   const handleShow = () => setShow(true);\n\n//   // Check if the current path matches `/services` or its child routes\n//   const isServicesActive = pathname.startsWith(\"/services\");\n\n//   return (\n//     <>\n//       <Navbar expand=\"lg\" className=\"navigation-bar border-bottom\">\n//         <Container className=\"my-3\">\n//           <Navbar.Brand as={Link} to=\"/\" className=\"d-flex align-items-center\">\n//             <Image\n//               src={OfficialLogo2}\n//               style={{ width: \"40px\", height: \"30px\" }}\n//               className=\"me-2\"\n//               alt=\"Driftmark Logo\"\n//             />\n//             <span className=\"text-teal fw-bold m-0\" style={{ color: \"#0085BD\" }}>\n//               Driftmark Technology\n//             </span>\n//           </Navbar.Brand>\n//           <Button\n//             variant=\"outline-primary\"\n//             className=\"d-lg-none\"\n//             onClick={handleShow}\n//           >\n//             <span className=\"navbar-toggler-icon\"></span>\n//           </Button>\n//           <Navbar.Collapse className=\"justify-content-end d-none d-lg-flex\">\n//             <Nav className=\"nav-links\">\n//               {[{ to: \"/\", label: \"Home\" }, { to: \"/innovation\", label: \"Innovation\" }, { to: \"/enterprise\", label: \"Enterprise\" }, { to: \"/about\", label: \"About Us\" }, { to: \"/contact\", label: \"Contact\" }]\n//                 .map(({ to, label }) => (\n//                   <Nav.Link\n//                     key={to}\n//                     as={Link}\n//                     to={to}\n//                     className={`nav-item ${\n//                       pathname === to ? \"active-link\" : \"\"\n//                     }`}\n//                   >\n//                     {label}\n//                   </Nav.Link>\n//                 ))}\n//               <Dropdown>\n//                 <Dropdown.Toggle\n//                   id=\"dropdown-services\"\n//                   className={`nav-item ${isServicesActive ? \"active-link\" : \"\"}`}\n//                   variant=\"link\"\n//                   style={{ textDecoration: \"none\" }}\n//                 >\n//                   Services\n//                 </Dropdown.Toggle>\n//                 <Dropdown.Menu>\n//                   <Dropdown.Item as={Link} to=\"/services/blog\">\n//                     Blog\n//                   </Dropdown.Item>\n//                   <Dropdown.Item as={Link} to=\"/services/downloads\">\n//                     Downloads\n//                   </Dropdown.Item>\n//                 </Dropdown.Menu>\n//               </Dropdown>\n//             </Nav>\n//           </Navbar.Collapse>\n//         </Container>\n//       </Navbar>\n\n//       <Offcanvas show={show} onHide={handleClose} placement=\"end\">\n//         <Offcanvas.Header closeButton></Offcanvas.Header>\n//         <Offcanvas.Body>\n//           <Nav className=\"flex-column\">\n//             {[{ to: \"/\", label: \"Home\" }, { to: \"/innovation\", label: \"Innovation\" }, { to: \"/enterprise\", label: \"Enterprise\" }, { to: \"/about\", label: \"About Us\" }, { to: \"/contact\", label: \"Contact\" }]\n//               .map(({ to, label }) => (\n//                 <Nav.Link\n//                   key={to}\n//                   as={Link}\n//                   to={to}\n//                   onClick={handleClose}\n//                   className={`nav-item ${\n//                     pathname === to ? \"active-link\" : \"\"\n//                   }`}\n//                 >\n//                   {label}\n//                 </Nav.Link>\n//               ))}\n//             <Dropdown>\n//               <Dropdown.Toggle\n//                 id=\"dropdown-services-mobile\"\n//                 className={`nav-item ${isServicesActive ? \"active-link\" : \"\"}`}\n//                 variant=\"link\"\n//                 style={{ textDecoration: \"none\" }}\n//               >\n//                 Services\n//               </Dropdown.Toggle>\n//               <Dropdown.Menu>\n//                 <Dropdown.Item as={Link} to=\"/services/blog\" onClick={handleClose}>\n//                   Blog\n//                 </Dropdown.Item>\n//                 <Dropdown.Item as={Link} to=\"/services/downloads\" onClick={handleClose}>\n//                   Downloads\n//                 </Dropdown.Item>\n//               </Dropdown.Menu>\n//             </Dropdown>\n//           </Nav>\n//         </Offcanvas.Body>\n//       </Offcanvas>\n//     </>\n//   );\n// }\n\n// export default NavigationBar;\n\n\n\n\n\n\n\n\n\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}